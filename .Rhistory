96-14
setwd("C:/Users/patrick/Dropbox/SNF_NR/caul_time_Series")
# Load packages and functions ---------------------------------------------
library(fANCOVA)
library(reshape2)
library(plyr)
library(R.oo)
library(R.utils)
library(ggplot2)
library(gridExtra)
library(scales)
source("webster.R")
source("heat.R")
heat_ci <- function(obj, lag = 0){
a <- mean(obj$data$value[obj$data$variable == lag], na.rm = T)
b <- sd(obj$data$value[obj$data$variable == lag], na.rm = T)
qnorm(c(0.025,0.975), a, b)
}
# Load data ---------------------------------------------------------------
allo_mlg <- read.csv("inputs/allozyme_mlgs_date.csv")
allo_spp <- read.csv("inputs/allozyme_spp_date.csv", sep = ";")
msat_mlg <- read.csv("inputs/msat_mlg_time.csv", sep = ";")
msat_spp <- read.csv("inputs/msat_spp_time.csv", sep = ";")
d.demo <- read.csv("inputs/Demography.csv", sep =";")
algae <- read.csv("inputs/algae_biomass.csv", sep = " ")
caullerya <- read.csv("inputs/caullerya.txt", sep = "\t")
d.temperature <- read.csv("inputs/temperature_1942_2014.csv", sep = ";")
d.oxygen <- read.csv("inputs/O2.txt", sep = "\t")
allo_date_sums <- data.frame(date = allo_mlg$date, tot = rowSums(allo_mlg[, 2:ncol(allo_mlg)]))
# Fix dates of input files ------------------------------------------------
allo_mlg$date <- as.Date(allo_mlg$date)
allo_spp$date <- as.Date(allo_spp$date)
msat_mlg$date <- as.Date(msat_mlg$date)
msat_spp$date <- as.Date(msat_spp$date)
algae$date <- as.Date(algae$date)
# Set day zero ------------------------------------------------------------
min_date <- min(allo_mlg$date)
# Transform DEMOGRAPHY data  ------------------------------------------------
# Demography
d.demo <- within(d.demo, {
d..day.1.[data_state!=""] <- NA
b..day.1.[data_state!=""] <- NA
})
yrs <- as.Date(d.demo$Date, "%d.%m.%Y")
yrs <- data.frame(min=yrs[-length(yrs)], max=yrs[-1], diff=diff.Date(yrs))
yrs <- subset(yrs, diff>55)
yrs$n <- c(1:nrow(yrs))
#r
#-
d.r <- d.demo[,c("Date", "r..day.1.")]
d.r <- within(d.r, {date <- as.Date(Date, "%d.%m.%y")
value <- as.numeric(as.character(r..day.1.))
})
d.r <- d.r[!is.na(d.r$value),]
#d
#-
d.d <- d.demo[,c("Date", "d..day.1.")]
d.d <- within(d.d, {date <- as.Date(Date, "%d.%m.%y")
value <- as.numeric(as.character(d..day.1.))
})
d.d <- d.d[!is.na(d.d$value),]
#b
#-
d.b <- d.demo[,c("Date", "b..day.1.")]
d.b <- within(d.b, {date <- as.Date(Date, "%d.%m.%y")
value <- as.numeric(as.character(b..day.1.))
})
d.b <- d.b[!is.na(d.b$value),]
#n
#-
d.n <- d.demo[,c(1, 4:7)]
d.n$n <- rowSums(d.n[, 2:5])
d.n <- within(d.n, {date <- as.Date(Date, "%d.%m.%y")
value <- as.numeric(as.character(n))
})
d.n <- d.n[!is.na(d.n$value),]
# Transform ALGAE data ----------------------------------------------------
algae_rel <- dcast(algae, date ~ taxon2, value.var = "biomass")
algae_rel[, 2:ncol(algae_rel)] <- algae_rel[, 2:ncol(algae_rel)] / rowSums(algae_rel[, 2:ncol(algae_rel)])
algae_rel <- melt(algae_rel, value.name = "biomass", variable.name = "taxon2", id.vars = "date")
algae_rel[is.na(algae_rel)] <- 0
algae_sum <- ddply(algae, .(date), function(x) sum(x$biomass))
algae_matrix <- dcast(algae, date ~ taxon2)
algae_matrix[is.na(algae_matrix)] <- 0
algae_rel_matrix <- dcast(algae_rel, date ~ taxon2)
algae_rel_matrix <- algae_rel_matrix[rowSums(algae_rel_matrix[, 2:ncol(algae_rel_matrix)]) != 0, ]
algae_cyan <- algae_matrix[, c("date", "Cyanobacteria")]
algae_cyan$Cyanobacteria[is.na(algae_cyan$Cyanobacteria)] <- 0
# Transform CAULLERYA data ------------------------------------------------
caullerya$date <- as.Date(caullerya$date2, format = "%d.%m.%Y")
caullerya$value <- caullerya$caullerya.prevalence
# Transform TEMPERATURE data ----------------------------------------------
d.temperature <- within(d.temperature, date <- as.Date(date, "%d.%m.%Y"))
d.temperature <- subset(d.temperature, depth <=15 & date > min_date)
d.temp_aggr <- ddply(d.temperature, .(date), summarize, value = mean(temp, na.rm=T), n = length(temp))
temperature <- d.temp_aggr
# Transform OXYGEN data ---------------------------------------------------
names(d.oxygen) <- gsub(pattern="X",replacement="",x=names(d.oxygen))
d.oxygen <- melt(d.oxygen,na.rm=F)
d.oxygen <- within(d.oxygen, {date <- as.Date(Datum, "%d.%m.%Y")
variable <- as.numeric(as.character(variable))
})
d.oxygen <- subset(d.oxygen, variable <=15 & date > min_date)
oxygen <- ddply(d.oxygen, .(date), summarise, value = mean(value, na.rm=T), n = length(value))
# Turnover for DAPHNIA ----------------------------------------------------
window = 120
allo_mlg_turn <- webster(allo_mlg[, 2:ncol(allo_mlg)],
dates = allo_mlg$date,
window = window, dist = "bray",
window_type = "days", rarefy = TRUE)
allo_mlg_turn <- allo_mlg_turn[!is.na(allo_mlg_turn$dist), ]
allo_spp_turn <- webster(allo_spp[, 2:ncol(allo_spp)],
dates = allo_spp$date,
window = window, dist = "bray",
window_type = "days", rarefy = TRUE)
allo_spp_turn <- allo_spp_turn[!is.na(allo_spp_turn$dist), ]
msat_mlg_turn <- webster(msat_mlg[, 3:ncol(msat_mlg)],
dates = msat_mlg$date,
window = window, dist = "bray",
window_type = "days", rarefy = TRUE)
msat_mlg_turn <- msat_mlg_turn[!is.na(msat_mlg_turn$dist), ]
msat_spp_turn <- webster(msat_spp[, 2:ncol(msat_spp)],
dates = msat_spp$date,
window = window, dist = "bray",
window_type = "days", rarefy = TRUE)
msat_spp_turn <- msat_spp_turn[!is.na(msat_spp_turn$dist), ]
# Decompose ALLO MLG series -----------------------------------------------
mod1 <- lm(data = allo_mlg_turn, dist ~ date)
plot(allo_mlg_turn$date, allo_mlg_turn$dist)
abline(mod1)
summary(mod1)
anova(mod1)
allo_mlg_turn$dist2 <- residuals(mod1)
smp_gg <- ggplot(msat_mlg_turn, aes(x = date, y = all_sum))+
geom_line() +
geom_smooth(method = "lm")
smp_gg
# Turnover for ALGAE ------------------------------------------------------
window = 90
algae_turn <- webster(algae_matrix[, 2:ncol(algae_matrix)],
dates = algae_matrix$date,
window = window, dist = "bray",
window_type = "days", rarefy = FALSE)
algae_turn <- algae_turn[!is.na(algae_turn$dist), ]
algae_rel_turn <- webster(algae_rel_matrix[, 2:ncol(algae_rel_matrix)],
dates = algae_rel_matrix$date,
window = window, dist = "bray",
window_type = "days", rarefy = FALSE)
algae_rel_turn <- algae_rel_turn[!is.na(algae_rel_turn$dist), ]
# Set day zero to the same date in all series -----------------------------
allo_mlg_turn <- within(allo_mlg_turn, days <- difftime(date, min_date, units="days"))
allo_spp_turn <- within(allo_spp_turn, days <- difftime(date, min_date, units="days"))
msat_mlg_turn <- within(msat_mlg_turn, days <- difftime(date, min_date, units="days"))
msat_spp_turn <- within(msat_spp_turn, days <- difftime(date, min_date, units="days"))
d.r <- within(d.r, days <- difftime(date, min_date, units="days"))
d.b <- within(d.b, days <- difftime(date, min_date, units="days"))
d.d <- within(d.d, days <- difftime(date, min_date, units="days"))
d.n <- within(d.n, days <- difftime(date, min_date, units="days"))
algae_cyan <- within(algae_cyan, days <- difftime(date, min_date, units="days"))
algae_turn <- within(algae_turn, days <- difftime(date, min_date, units="days"))
algae_rel_turn <- within(algae_rel_turn, days <- difftime(date, min_date, units="days"))
algae_sum <- within(algae_sum, days <- difftime(date, min_date, units="days"))
caullerya <- within(caullerya, days <- difftime(date, min_date, units="days"))
temperature <- within(temperature, days <- difftime(date, min_date, units="days"))
oxygen <- within(oxygen, days <- difftime(date, min_date, units="days"))
lower_gap <- as.Date("2005-06-10")
upper_gap <- as.Date("2006-06-15")
lower_missing <- difftime(lower_gap, min_date, "days")
upper_missing <- difftime(upper_gap, min_date, "days")
# Smooth DAPHNIA TURNOVER series -----------------------------------------------------------
y_allo_m <- with(allo_mlg_turn,
(loess.as(days, dist, plot = T, user.span = 0.03)))
y_allo_s <- with(allo_spp_turn,
(loess.as(days, dist, plot = T, user.span = 0.03)))
y_msat_m <- with(msat_mlg_turn,
(loess.as(days, dist, plot = T, user.span = 0.1)))
y_msat_s <- with(msat_spp_turn,
(loess.as(days, dist, plot = T, user.span = 0.1)))
#  with(y_msat_m, plot(x, y, main = "Allozyme MLG Turnover",
#                     las = 2, xlab = "days", type="p", cex = 0.1))
# with(y_msat_m, lines(x, fitted, lty="dashed"))
# Smooth DRIVER series ----------------------------------------------------
x_d.r <- with(d.r,
(loess.as(days, value, plot = T, user.span = 0.02)))
x_d.b <- with(d.b,
(loess.as(days, value, plot = T, user.span = 0.02)))
x_d.d <- with(d.d,
(loess.as(days, value, plot = T, user.span = 0.02)))
x_d.n <- with(d.n,
(loess.as(days, value, plot = T, user.span = 0.02)))
x_algae_cyan <- with(algae_cyan,
(loess.as(days, Cyanobacteria, plot = T, user.span = 0.02)))
x_algae_turn <- with(algae_turn,
(loess.as(days, dist, plot = T, user.span = 0.02)))
x_algae_rel_turn <- with(algae_rel_turn,
(loess.as(days, dist, plot = T, user.span = 0.02)))
x_algae_sum <- with(algae_sum,
(loess.as(days, V1, plot = T, user.span = 0.03)))
x_caullerya <- with(caullerya,
(loess.as(days, caullerya.prevalence, plot = T,
user.span = 0.04)))
x_temperatre <- with(temperature,
(loess.as(days, value, plot = T, user.span = 0.04)))
x_oxygen <- with(oxygen,
(loess.as(days, value, plot = T, user.span = 0.04)))
msat_m5.1 <- heat(log(y_msat_m), x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30), give_series = T)
y_msat_m
source("heat.R")
msat_m5.1 <- heat(log(y_msat_m), x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_X = T)
source("heat.R")
msat_m5.1 <- heat(log(y_msat_m), x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_X = T)
source("heat.R")
msat_m5.1 <- heat(log(y_msat_m), x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_X = T)
heat(log_x = t)
msat_m5.1 <- heat(log(y_msat_m), x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_x = T)
source("heat.R")
msat_m5.1 <- heat(y_msat_m, x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_s1 = T)
source("heat.R")
msat_m1.1 <- heat(y_msat_m, x_algae_cyan, sample = c(40, 60), lags = 5,
s_window = c(40, 60), l_window = c(-60, 60), give_series = T)
source("heat.R")
msat_m5.1 <- heat(y_msat_m, x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_s1 = T)
msat_m5.1$index <- paste(msat_m5.1$interval, msat_m5.1$start_push,
sep = "-")
selection <- sample(unique(msat_m5.1$index), size = 56, replace = F)
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
corrs <- ddply(to_plot, .(index), function(x){
corr <- x[1, "lag_0"]
corr})
names(corr) <- "corr"
corrs$corr <- round(corrs$corr, 3)
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
selection <- sample(unique(msat_m5.1$index), size = 56, replace = F)
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
corrs <- ddply(to_plot, .(index), function(x){
corr <- x[1, "lag_0"]
names(corr) <- "corr"
corr})
corrs$corr <- round(corrs$corr, 3)
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
View(to_plot)
log0
log(0)
log(1)
log(2)
View(to_plot)
log(0.5)
source("heat.R")
msat_m5.1 <- heat(y_msat_m, x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_s1 = T)
msat_m5.1$index <- paste(msat_m5.1$interval, msat_m5.1$start_push,
sep = "-")
selection <- sample(unique(msat_m5.1$index), size = 56, replace = F)
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
View(to_plot)
corrs <- ddply(to_plot, .(index), function(x){
corr <- x[1, "lag_0"]
names(corr) <- "corr"
corr})
corrs$corr <- round(corrs$corr, 3)
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, -0.5))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = -0.5, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = -0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
msat_m5.1 <- heat(y_msat_m, x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_s1 = F)
selection <- sample(unique(msat_m1.1$index), size = 56, replace = F)
to_plot <- msat_m1.1[msat_m1.1$index %in% selection, ]
msat_m5.1$index <- paste(msat_m5.1$interval, msat_m5.1$start_push,
sep = "-")
selection <- sample(unique(msat_m5.1$index), size = 56, replace = F)
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
corrs <- ddply(to_plot, .(index), function(x){
corr <- x[1, "lag_0"]
names(corr) <- "corr"
corr})
corrs$corr <- round(corrs$corr, 3)
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = -0.5) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
msat_m5.1 <- heat(y_msat_m, x_caullerya, sample = c(40, 60), lags = 5,
s_window = c(45, 55), l_window = c(-30, 30),
give_series = T, log_s1 = T, log_s2 = T)
msat_m5.1$index <- paste(msat_m5.1$interval, msat_m5.1$start_push,
sep = "-")
selection <- sample(unique(msat_m5.1$index), size = 56, replace = F)
to_plot <- msat_m5.1[msat_m5.1$index %in% selection, ]
corrs <- ddply(to_plot, .(index), function(x){
corr <- x[1, "lag_0"]
names(corr) <- "corr"
corr})
corrs$corr <- round(corrs$corr, 3)
ggmsat_m5.1 <- ggplot(to_plot, aes(x = series2, y = series1)) +
geom_point() +
scale_color_discrete() +
facet_wrap(~ index, ncol = 7) +
theme_bw() +
stat_smooth(method = "lm") +
theme(strip.background = element_blank(), strip.text = element_blank()) +
geom_text(data = corrs, aes(label = corr), x = 0.15, y = 0.6) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_x_continuous(breaks = seq(0, 0.15, 0.05))+
labs(title = "Parasite Prevalence",
y = expression(paste(italic(Daphnia), " microsat. Turnover")),
x = expression(paste("Fraction of ", italic(Daphnia), " infected by ",
italic(Caullerya))))
ggmsat_m5.1
