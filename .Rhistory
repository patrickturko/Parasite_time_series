ps$p_value[ps$p_value > 0.00001] <- round(ps$p_value[ps$p_value > 0.00001], 3)
ps$p_value[ps$p_value < 0.00001] <- "< 0.00001"
View(ps)
ps$type <- factor("Infected", levels = c("Random", "Infected"))
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(x = 40, y = 1, label = p_value))
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(x = 40, y = 10, label = p_value))
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value), x = 40, y = 10)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value), x = Inf, y = Inf)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value), x = Inf, y = Inf, hjust = 1)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value), x = Inf, y = Inf, hjust = 1, vjust = 1)
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
final.graph <- pop.graph2.red +
geom_label(data = ps, aes(label = p_value),
x = Inf, y = Inf, hjust = 1, vjust = 1)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf, y = Inf, hjust = 1, vjust = 1,
size = 10, nudge_x = -1, nudge_y = -1)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf-1, y = Inf-1, hjust = 1, vjust = 1,
size = 10, nudge_x = -1, nudge_y = -1)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf-1, y = Inf-1, hjust = 1, vjust = 1,
size = 10)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf-1, y = Inf-1, hjust = 1, vjust = 1,
size = 0.8)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf-1, y = Inf-1, hjust = 1, vjust = 1,
size = 5)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf-1, y = Inf-1, hjust = 1, vjust = 1,
size = 2)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value),
x = Inf, y = Inf, hjust = "inward", vjust = "inward",
size = 2)
final.graph
View(percent_by_date)
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"]])
}
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ])
}
View(ps)
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.25
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, y = pos),
x = Inf, hjust = "inward", vjust = "inward",
size = 2)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = Inf, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.1
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.9
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.1
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.5
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
View(ps)
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.2
}
View(ps)
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.3
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, face = p_value),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = p_value),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
ps$face <- "plain"
ps$face[ps$sig == yes] <- "bold"
ps$face[ps$sig == "yes"] <- "bold"
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = p_value),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 2)
final.graph
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 4)
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3)
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3) +
theme(legend.position="none")
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
#Add p-values to colored plot
#Crate the annotation data frame
ps <- pop.fish
ps$type <- factor("Infected", levels = c("Random", "Infected"))
ps$face <- "plain"
ps$face[ps$sig == "yes"] <- "bold"
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3) +
theme(legend.position="none")
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
ps$p_value[ps$p_value > 0.00001] <- round(ps$p_value[ps$p_value > 0.00001], 3)
ps$p_value[ps$p_value < 0.00001] <- "< 0.00001"
ps$type <- factor("Infected", levels = c("Random", "Infected"))
ps$face <- "plain"
ps$face[ps$sig == "yes"] <- "bold"
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3) +
theme(legend.position="none")
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
# Stats 2.5 Fisher test on two most common clones -----------------------------------
#Rank all the mlgs in each sample type .
counts2 <- ddply(counts, .(date, type), function(x){
x <- x[order(x$count, decreasing = TRUE), ]
x$rank <- 0
for(i in 1:nrow(x)){
if(x$count[i] != 0 & i == 1)
x$rank[i] <- 1
if(i > 1){
if(x$count[i] != 0 & x$count[i] == x$count[i - 1])
x$rank[i] <- x$rank[i - 1]
if(x$count[i] != 0 & x$count[i] < x$count[i - 1])
x$rank[i] <- x$rank[i - 1] + 1
}
}
x
})
# Take only the top clones in each sample type, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(x$rank[2] %in% c(1,2))
x$common <- "yes"
else
x$common <- "no"
x
})
# Take only the top clones in random, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(x$rank[2] %in% c(1,2))
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
# Take only the top clones in random (which are also over 5%), and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(x$rank[2] %in% c(1,2) & x$percent[2] > 0.05)
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
View(dates3)
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
View(dates3)
# Take only the top clones in random (which are also over 5%), and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
print(x)
# if(x$rank[2] %in% c(1,2) & x$percent[2] > 0.05)
#   x$common <- "yes"
# else
#   x$common <- "no"
# x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
# Take only the top clones in random (which are also over 5%), and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(x$rank[2] %in% c(1,2) & x$percent[2] > 0.05)
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
# Redo graph in light of stats --------------------------------------------
# Make list of clones tested for mis-infection
mis_inf_clones <- paste(dates3$date, dates3$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Add info on significance
percent_by_date2$mlg2 <- paste(percent_by_date2$date, percent_by_date2$mlg, sep = "_")
dates3$mlg2 <- mis_inf_clones
percent_by_date2 <- merge(percent_by_date2, dates3)
#Mark over vs under-infection
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
#Mark non-signifcant differences
percent_by_date2[percent_by_date2$sig == "no", "Infection"] <- "Proportionate"
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100,
fill = Infection),
stat = "identity", width = 0.8) +
scale_fill_manual(values = c("red", "black", "blue"))
pop.graph2.red
#Add p-values to colored plot
#Crate the annotation data frame
ps <- pop.fish
ps$p_value[ps$p_value > 0.00001] <- round(ps$p_value[ps$p_value > 0.00001], 3)
ps$p_value[ps$p_value < 0.00001] <- "< 0.00001"
ps$type <- factor("Infected", levels = c("Random", "Infected"))
ps$face <- "plain"
ps$face[ps$sig == "yes"] <- "bold"
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3) +
theme(legend.position="none")
final.graph
View(percent_by_date2)
# Take only the top clones in random (which are also over 5%), and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(x$rank[2] %in% c(1,2) & x$percent[2] > 0.052)
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
# Redo graph in light of stats --------------------------------------------
# Make list of clones tested for mis-infection
mis_inf_clones <- paste(dates3$date, dates3$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Add info on significance
percent_by_date2$mlg2 <- paste(percent_by_date2$date, percent_by_date2$mlg, sep = "_")
dates3$mlg2 <- mis_inf_clones
percent_by_date2 <- merge(percent_by_date2, dates3)
#Mark over vs under-infection
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
#Mark non-signifcant differences
percent_by_date2[percent_by_date2$sig == "no", "Infection"] <- "Proportionate"
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100,
fill = Infection),
stat = "identity", width = 0.8) +
scale_fill_manual(values = c("red", "black", "blue"))
pop.graph2.red
#Add p-values to colored plot
#Crate the annotation data frame
ps <- pop.fish
ps$p_value[ps$p_value > 0.00001] <- round(ps$p_value[ps$p_value > 0.00001], 3)
ps$p_value[ps$p_value < 0.00001] <- "< 0.00001"
ps$type <- factor("Infected", levels = c("Random", "Infected"))
ps$face <- "plain"
ps$face[ps$sig == "yes"] <- "bold"
#Calculate the label positions
for(i in 1:nrow(ps)){
ps$pos[i] <- nrow(percent_by_date[percent_by_date$date == ps[i, "date"], ]) * 0.4
}
#add the annotations to the graph
final.graph <- pop.graph2.red +
geom_text(data = ps, aes(label = p_value, x = pos, fontface = face),
y = 45, hjust = "inward", vjust = "inward",
size = 3) +
theme(legend.position="none")
final.graph
#save it
ggsave("Rand_vs_Inf_percent_annotated.pdf", final.graph, height = 10, width = 6, units = "in", dpi = 600)
