source("http://bioconductor.org/biocLite.R")
biocLite("DESeq")
biocLite("DESeq2")
biocLite("edgeR")
setwd("/media/FILES/Dropbox/Turko PhD Data/Turko et al Chapter 5 Greifensee/Time Series")
library(plyr)
library(ggplot2)
library(ggExtra)
library(reshape2)
# Load, clean, and prepare data -------------------------------------------
# Load and clean data
mlgs <- read.table(file = "inputs/confirmed_mlgs.txt", header = TRUE, sep = "\t")
mlgs <- mlgs[, c("mlg", "pop", "X2")]
names(mlgs) <- c("mlg", "date", "type")
mlgs$date <- as.Date(mlgs$date)
mlgs$mlg <- as.factor(mlgs$mlg)
mlgs$date[mlgs$date == "2012-09-20" & mlgs$type == "Random"] <- "2012-09-06"
# Extract only those dates which have both infected and random sample
matched <- ddply(mlgs, .variables = "date", .fun = function(x){
if(length(unique(x$type)) == 2)
x
})
# Count how many individuals of each MLG are present in each sample at each date
counts <- dcast(matched, date + type ~ mlg, fun.aggregate = length)
counts <- melt(counts, id.vars = c("date", "type"))
names(counts) <- c("date", "type", "mlg", "count")
#Express counts as percentages instead.
counts <- ddply(counts, .(date, type), function(x){
total <- sum(x$count)
x$percent <- x$count / total
x
})
# Rename the mlgs so that each date has it's own set
# For the percent data
percent_by_date <- ddply(counts, .(date), function(x){
tmp <- dcast(x, mlg ~ type, value.var = "percent")
tmp <- tmp[tmp$Infected != 0 | tmp$Random !=0, ]
tmp$mlg2 <- paste(x$date[1], tmp$mlg, sep = "_")
tmp <- tmp[order(tmp$Random), ]
tmp$mlg2 <- factor(tmp$mlg2, levels = tmp$mlg2)
tmp
})
#And for the count data
counts_by_date <- ddply(counts, .(date), function(x){
tmp <- dcast(x, mlg ~ type, value.var = "count")
tmp <- tmp[tmp$Infected != 0 | tmp$Random !=0, ]
tmp$mlg2 <- paste(x$date[1], tmp$mlg, sep = "_")
tmp <- tmp[order(tmp$Random), ]
tmp$mlg2 <- factor(tmp$mlg2, levels = tmp$mlg2)
tmp
})
# Refactor variables to get the desired order in the plot
percent_by_date <- melt(percent_by_date, id.vars = c("date", "mlg", "mlg2"))
names(percent_by_date)[4:5] <- c("type", "percent")
percent_by_date$type <- factor(percent_by_date$type, levels = c("Random", "Infected"))
percent_by_date[percent_by_date == 0] <- NA
counts_by_date <- melt(counts_by_date, id.vars = c("date", "mlg", "mlg2"))
names(counts_by_date)[4:5] <- c("type", "count")
counts_by_date$type <- factor(counts_by_date$type, levels = c("Random", "Infected"))
counts_by_date[counts_by_date == 0] <- NA
pop.graph <- ggplot(counts_by_date,
aes(x = mlg2, y = count)) +
facet_grid(date~type, scales = "free") +
geom_bar(stat = "identity", width = 0.8) +
theme_bw() +
removeGrid() +
scale_x_discrete(expand = c(0.02, 0.02)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
ylab(label = "Count") +
xlab(label = "MLG") +
theme(aspect.ratio = 1) +
coord_flip()
pop.graph
pop.graph2 <- ggplot(percent_by_date,
aes(x = mlg2, y = percent * 100)) +
facet_grid(date~type, scales = "free_y") +
geom_bar(stat = "identity", width = 0.8) +
theme_bw() +
removeGrid() +
scale_x_discrete(expand = c(0.02, 0.02)) +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
ylab(label = "Percent of Sample") +
xlab(label = "MLG") +
theme(aspect.ratio = 1) +
coord_flip()
pop.graph2
# Stats 2.5 Fisher test on two most common clones -----------------------------------
#Rank all the mlgs in each sample type .
counts2 <- ddply(counts, .(date, type), function(x){
x <- x[order(x$count, decreasing = TRUE), ]
x$rank <- 0
for(i in 1:nrow(x)){
if(x$count[i] != 0 & i == 1)
x$rank[i] <- 1
if(i > 1){
if(x$count[i] != 0 & x$count[i] == x$count[i - 1])
x$rank[i] <- x$rank[i - 1]
if(x$count[i] != 0 & x$count[i] < x$count[i - 1])
x$rank[i] <- x$rank[i - 1] + 1
}
}
x
})
# Take only the top clones in each sample type, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(sum(x$rank %in% c(1,2)) == 1)
#if(x$rank[2] == 1)
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
View(dates3)
# Redo graph in light of stats --------------------------------------------
# Make list of mis-infected clones
mis_inf_clones <- paste(dates3$date, dates3$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Mark over vs under-infection
percent_by_date2$Infection <- NA
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100, fill = Infection),
stat = "identity", width = 0.8)
pop.graph2.red
#save it
ggsave("Rand_vs_Inf_percent_red.pdf", pop.graph2.red, height = 10, width = 6, units = "in", dpi = 600)
View(dates3)
View(percent_by_date2)
# Redo graph in light of stats --------------------------------------------
# Make list of mis-infected clones
sigs <- dates3[dates3$sig == "yes", ]
mis_inf_clones <- paste(sigs$date, sigs$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Mark over vs under-infection
percent_by_date2$Infection <- NA
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100, fill = Infection),
stat = "identity", width = 0.8)
pop.graph2.red
#save it
ggsave("Rand_vs_Inf_percent_red.pdf", pop.graph2.red, height = 10, width = 6, units = "in", dpi = 600)
# Take only the top clones in each sample type, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
#if(sum(x$rank %in% c(1,2)) == 1)
if(x$rank[2] %in% c(1,2))
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
# Redo graph in light of stats --------------------------------------------
# Make list of mis-infected clones
sigs <- dates3[dates3$sig == "yes", ]
mis_inf_clones <- paste(sigs$date, sigs$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Mark over vs under-infection
percent_by_date2$Infection <- NA
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100, fill = Infection),
stat = "identity", width = 0.8)
pop.graph2.red
#save it
ggsave("Rand_vs_Inf_percent_red.pdf", pop.graph2.red, height = 10, width = 6, units = "in", dpi = 600)
# Take only the top clones in each sample type, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(sum(x$rank %in% c(1,2)) == 1)
#if(x$rank[2] %in% c(1,2))
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
# Redo graph in light of stats --------------------------------------------
# Make list of mis-infected clones
sigs <- dates3[dates3$sig == "yes", ]
mis_inf_clones <- paste(sigs$date, sigs$mlg, sep = "_")
#Filter percent data to just these clones
percent_by_date2 <- percent_by_date[percent_by_date$mlg2 %in% mis_inf_clones, ]
#Mark over vs under-infection
percent_by_date2$Infection <- NA
percent_by_date2 <- ddply(percent_by_date2, .(mlg2), function(x){
x[is.na(x)] <- 0
if(x[x$type == "Infected", "percent"] < x[x$type == "Random", "percent"])
x$Infection <- "Under"
if(x[x$type == "Infected", "percent"] > x[x$type == "Random", "percent"])
x$Infection <- "Over"
x
})
pop.graph2.red <- pop.graph2 +
geom_bar(data = percent_by_date2, aes(x = mlg2, y = percent * 100, fill = Infection),
stat = "identity", width = 0.8)
pop.graph2.red
#save it
ggsave("Rand_vs_Inf_percent_red.pdf", pop.graph2.red, height = 10, width = 6, units = "in", dpi = 600)
# Take only the top clones in each sample type, and reshape to suit test
common2 <- ddply(counts2, .(date, mlg), function(x){
if(sum(x$rank %in% c(1,2)) == 1)
#if(x$rank[2] %in% c(1,2))
x$common <- "yes"
else
x$common <- "no"
x
})
#Make holder & do the test
dates3 <- unique(common2[common2$common == "yes", c("date", "mlg")])
dates3$p_value = 1
for(i in 1:nrow(dates3)){
date <- dates3$date[i]
mlg <- dates3$mlg[i]
com <- common2[common2$date == date & common2$mlg == mlg, ]
com_rand <- com$count[com$type == "Random"]
com_inf <- com$count[com$type == "Infected"]
other <- common2[common2$date == date & common2$mlg != mlg, ]
other_rand <- sum(other$count[other$type == "Random"])
other_inf <- sum(other$count[other$type == "Infected"])
to_test <- data.frame(random = c(com_rand, other_rand),
infected = c(com_inf, other_inf))
tmp_p <- fisher.test(to_test)$p.value
dates3[i, "p_value"] <- tmp_p
}
dates3 <- dates3[order(dates3$p_value), ]
dates3$threshhold <- 0.05 / (nrow(dates3) - 1:nrow(dates3) + 1)
dates3$sig <- "no"
dates3$sig[dates3$p_value <= dates3$threshhold] <- "yes"
#write to file
write.table(dates3, "over_under_inf_top_two.csv", row.names = F)
